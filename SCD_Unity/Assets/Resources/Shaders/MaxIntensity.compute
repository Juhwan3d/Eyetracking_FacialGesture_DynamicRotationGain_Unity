#pragma kernel CSMain

int tw;
int th;

Texture2D<float4> lum_tex;
RWTexture2D<float4> Result;

[numthreads(16, 16, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    if (id.x >= tw || id.y >= th)
        return;

    float currentValue = lum_tex[id.xy].r;

    // Fetch neighboring pixels
    float2 uv = float2(id.x / float(tw), id.y / float(th));
    float4 bl = lum_tex.Load(int3(uv + float2(0, 0), 0));
    float4 br = lum_tex.Load(int3(uv + float2(1, 0), 0));
    float4 ul = lum_tex.Load(int3(uv + float2(0, 1), 0));
    float4 ur = lum_tex.Load(int3(uv + float2(1, 1), 0));

    // Find max value among current and neighboring pixels
    float maxValue = max(max(bl.r, br.r), max(ul.r, ur.r));
    maxValue = max(maxValue, currentValue);

    Result[id.xy] = float4(maxValue, 0, 0, 0);
}
